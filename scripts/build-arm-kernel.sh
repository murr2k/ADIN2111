#!/bin/bash
# Build ARM kernel for QEMU testing with SPI support

set -e

KERNEL_VERSION="6.6.87"
BUILD_DIR="/tmp/arm-kernel-build"
KERNEL_URL="https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${KERNEL_VERSION}.tar.xz"

echo "=== Building ARM Kernel ${KERNEL_VERSION} for QEMU ==="

# Create build directory
mkdir -p $BUILD_DIR
cd $BUILD_DIR

# Download kernel if not exists
if [ ! -f "linux-${KERNEL_VERSION}.tar.xz" ]; then
    echo "Downloading kernel..."
    wget -q --show-progress $KERNEL_URL
fi

# Extract kernel
if [ ! -d "linux-${KERNEL_VERSION}" ]; then
    echo "Extracting kernel..."
    tar xf linux-${KERNEL_VERSION}.tar.xz
fi

cd linux-${KERNEL_VERSION}

# Create minimal config for ARM virt with SPI
echo "Creating kernel config..."
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- defconfig

# Enable required options
cat >> .config << EOF
CONFIG_SPI=y
CONFIG_SPI_PL022=y
CONFIG_SPI_SPIDEV=y
CONFIG_SPI_DEBUG=y
CONFIG_NET_VENDOR_ADI=y
CONFIG_DEVTMPFS=y
CONFIG_DEVTMPFS_MOUNT=y
CONFIG_TMPFS=y
CONFIG_TMPFS_POSIX_ACL=y
CONFIG_MODULES=y
CONFIG_MODULE_UNLOAD=y
CONFIG_MODVERSIONS=y
CONFIG_VIRTIO=y
CONFIG_VIRTIO_PCI=y
CONFIG_VIRTIO_NET=y
CONFIG_VIRTIO_BLK=y
CONFIG_VIRTIO_CONSOLE=y
CONFIG_9P_FS=y
CONFIG_9P_FS_POSIX_ACL=y
CONFIG_NET_9P=y
CONFIG_NET_9P_VIRTIO=y
CONFIG_SERIAL_AMBA_PL011=y
CONFIG_SERIAL_AMBA_PL011_CONSOLE=y
EOF

# Update config
yes "" | make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- oldconfig

# Build kernel
echo "Building kernel (this may take 10-15 minutes)..."
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j$(nproc) zImage dtbs

# Copy outputs
echo "Copying kernel and DTB..."
cp arch/arm/boot/zImage /home/murr2k/projects/ADIN2111/build-test/
cp arch/arm/boot/dts/arm/virt-v7.dtb /home/murr2k/projects/ADIN2111/build-test/ 2>/dev/null || \
cp arch/arm/boot/dts/virt.dtb /home/murr2k/projects/ADIN2111/build-test/ 2>/dev/null || \
echo "DTB will be generated by QEMU"

echo "=== Kernel build complete ==="
echo "Kernel: /home/murr2k/projects/ADIN2111/build-test/zImage"
echo "DTB: QEMU will generate"