#!/bin/bash
# Build minimal ARM Linux kernel for QEMU with SPI support
# For testing ADIN2111 hybrid driver

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${GREEN}=== Building ARM Linux Kernel for QEMU ===${NC}"

# Configuration
KERNEL_VERSION="6.6.63"
KERNEL_DIR="linux-${KERNEL_VERSION}"
KERNEL_TAR="linux-${KERNEL_VERSION}.tar.xz"
KERNEL_URL="https://cdn.kernel.org/pub/linux/kernel/v6.x/${KERNEL_TAR}"

# Check for ARM cross compiler
if ! command -v arm-linux-gnueabihf-gcc &> /dev/null; then
    echo -e "${YELLOW}Installing ARM cross compiler...${NC}"
    echo "pass" | sudo -S apt-get update
    echo "pass" | sudo -S apt-get install -y gcc-arm-linux-gnueabihf
fi

# Download kernel if needed
if [ ! -d "$KERNEL_DIR" ]; then
    if [ ! -f "$KERNEL_TAR" ]; then
        echo -e "${YELLOW}Downloading kernel ${KERNEL_VERSION}...${NC}"
        wget "$KERNEL_URL"
    fi
    echo -e "${YELLOW}Extracting kernel...${NC}"
    tar xf "$KERNEL_TAR"
fi

cd "$KERNEL_DIR"

# Configure kernel for QEMU ARM virt machine
echo -e "${YELLOW}Configuring kernel for QEMU ARM virt...${NC}"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- defconfig

# Enable required options
cat >> .config << EOF
CONFIG_VIRTIO=y
CONFIG_VIRTIO_PCI=y
CONFIG_VIRTIO_BLK=y
CONFIG_VIRTIO_NET=y
CONFIG_VIRTIO_CONSOLE=y
CONFIG_HW_RANDOM_VIRTIO=y
CONFIG_SPI=y
CONFIG_SPI_MASTER=y
CONFIG_SPI_PL022=y
CONFIG_SPI_BITBANG=m
CONFIG_SPI_GPIO=m
CONFIG_SPI_SPIDEV=m
CONFIG_NET_VENDOR_ADI=y
CONFIG_PHYLIB=y
CONFIG_DEVTMPFS=y
CONFIG_DEVTMPFS_MOUNT=y
CONFIG_BLK_DEV_INITRD=y
CONFIG_RD_GZIP=y
CONFIG_TMPFS=y
CONFIG_TMPFS_POSIX_ACL=y
EOF

# Update config
yes "" | make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- oldconfig

# Build kernel
echo -e "${YELLOW}Building kernel (this will take a few minutes)...${NC}"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j$(nproc) zImage modules dtbs

# Copy outputs
echo -e "${GREEN}Copying kernel outputs...${NC}"
mkdir -p ../qemu-kernel
cp arch/arm/boot/zImage ../qemu-kernel/
cp arch/arm/boot/dts/arm/virt-v7.dtb ../qemu-kernel/ 2>/dev/null || \
   cp arch/arm/boot/dts/virt-v7.dtb ../qemu-kernel/ 2>/dev/null || \
   echo "DTB will be generated by QEMU"

# Build SPI modules
echo -e "${YELLOW}Building SPI modules...${NC}"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- M=drivers/spi modules

# Copy SPI modules
mkdir -p ../qemu-kernel/modules
find drivers/spi -name "*.ko" -exec cp {} ../qemu-kernel/modules/ \;

echo -e "${GREEN}âœ“ Kernel built successfully!${NC}"
echo "Kernel: qemu-kernel/zImage"
echo "Modules: qemu-kernel/modules/"

cd ..

# Copy our hybrid driver
echo -e "${YELLOW}Adding ADIN2111 hybrid driver...${NC}"
cp /tmp/adin2111_hybrid_build/adin2111_hybrid.c "$KERNEL_DIR/drivers/net/ethernet/"

echo -e "${GREEN}=== Build Complete ===${NC}"